@layer theme, base, frosted_ui, components, utilities;

@import "tailwindcss/theme.css" layer(theme);
@import "tailwindcss/preflight.css" layer(base);
@import "tailwindcss/utilities.css" layer(utilities);
/* @import "@whop/react/styles.css" layer(frosted_ui); */ /* File not included in published package */

@config '../tailwind.config.ts';

/* Ensure full height chain from root */
html, body {
  height: 100%;
}

/* Brand accent overrides */
:root {
  --accent-9: #FA4616;
  --accent-10: #E23F14;

  /* shadcn/ui sidebar color tokens mapped to existing palette */
  --sidebar: #000000;
  --sidebar-foreground: #ffffff;
  --sidebar-primary: #FA4616;
  --sidebar-primary-foreground: #ffffff;
  --sidebar-accent: rgba(255, 255, 255, 0.05);
  --sidebar-accent-foreground: #ffffff;
  --sidebar-border: rgba(255, 255, 255, 0.1);
  --sidebar-ring: rgba(255, 255, 255, 0.4);
}

.dark {
  --sidebar: #000000;
  --sidebar-foreground: #ffffff;
  --sidebar-primary: #FA4616;
  --sidebar-primary-foreground: #ffffff;
  --sidebar-accent: rgba(255, 255, 255, 0.05);
  --sidebar-accent-foreground: #ffffff;
  --sidebar-border: rgba(255, 255, 255, 0.1);
  --sidebar-ring: rgba(255, 255, 255, 0.4);
}

body {
	background: var(--background);
	color: var(--foreground);
	font-family: Arial, Helvetica, sans-serif;
}

/* Remove underlines from sidebar links */
[data-sidebar] a {
	text-decoration: none !important;
}

/* Use Geist Sans for all headings (provided by next/font in app/layout.tsx) */
h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-geist-sans), ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji" !important;
}

/* Utility to force Geist on non-heading text (e.g., brand text) */
.font-geist {
  font-family: var(--font-geist-sans), ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji" !important;
}

/* TipTap Editor Styles */
.ProseMirror {
	outline: none;
	color: #e5e5e5 !important;
}

/* Placeholder styles for empty nodes */
.ProseMirror p.is-editor-empty:first-child::before {
	content: attr(data-placeholder);
	float: left;
	color: rgba(255, 255, 255, 0.3);
	pointer-events: none;
	height: 0;
}

/* Show placeholder for all empty paragraphs, not just first child */
.ProseMirror .is-empty::before {
	content: attr(data-placeholder);
	float: left;
	color: rgba(255, 255, 255, 0.3);
	pointer-events: none;
	height: 0;
}

.ProseMirror h1 {
	font-size: 2em;
	font-weight: bold;
	margin-top: 0.67em;
	margin-bottom: 0.67em;
	color: #ffffff !important;
}

.ProseMirror h2 {
	font-size: 1.5em;
	font-weight: bold;
	margin-top: 0.75em;
	margin-bottom: 0.75em;
	color: #ffffff !important;
}

.ProseMirror h3 {
	font-size: 1.17em;
	font-weight: bold;
	margin-top: 0.83em;
	margin-bottom: 0.83em;
	color: #ffffff !important;
}

.ProseMirror ul,
.ProseMirror ol {
	padding-left: 2em;
	margin: 1em 0;
	color: #e5e5e5 !important;
}

.ProseMirror ul {
	list-style-type: disc;
}

.ProseMirror ol {
	list-style-type: decimal;
}

.ProseMirror li {
	margin: 0.5em 0;
	color: #e5e5e5 !important;
}

.ProseMirror a {
	color: #FA4616 !important;
	text-decoration: underline;
}

.ProseMirror img {
	max-width: 100%;
	height: auto;
	border-radius: 0.375rem;
}

/* Make embedded iframes (e.g., YouTube) responsive in editor */
.ProseMirror iframe {
	max-width: 100%;
	border: 0;
	border-radius: 0.375rem;
}

.ProseMirror p {
	margin: 1em 0;
	color: #e5e5e5 !important;
}

/* CTA button styles (used in editor and preview) */
.ProseMirror .mm-cta-wrap,
.prose .mm-cta-wrap {
	margin: 1rem 0;
	text-align: left;
}

.ProseMirror .mm-cta-align-left,
.prose .mm-cta-align-left { text-align: left; }
.ProseMirror .mm-cta-align-center,
.prose .mm-cta-align-center { text-align: center; }
.ProseMirror .mm-cta-align-right,
.prose .mm-cta-align-right { text-align: right; }

.ProseMirror .mm-cta,
.prose .mm-cta {
	display: inline-block;
	font-weight: 600;
	text-decoration: none !important;
	padding: 10px 16px;
	border-radius: 8px;
	border: 1px solid transparent;
	font-family: var(--font-geist-sans), ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, "Noto Sans";
}

.ProseMirror .mm-cta-primary,
.prose .mm-cta-primary {
	background: #FA4616;
	border-color: #FA4616;
	color: #ffffff !important;
}

.ProseMirror .mm-cta-secondary,
.prose .mm-cta-secondary {
	background: #111827;
	border-color: #374151;
	color: #ffffff !important;
}

.ProseMirror .mm-cta-outline,
.prose .mm-cta-outline {
	background: transparent;
	border-color: #FA4616;
	color: #FA4616 !important;
}

/* Variable/Personalization tag styles */
.ProseMirror .mm-variable,
.prose .mm-variable {
	display: inline-flex;
	align-items: center;
	padding: 0.125rem 0.5rem;
	margin: 0 0.125rem;
	background: rgba(250, 70, 22, 0.15);
	border: 1px solid rgba(250, 70, 22, 0.4);
	border-radius: 0.375rem;
	color: #FA4616 !important;
	font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
	font-size: 0.875em;
	font-weight: 600;
	cursor: pointer;
	transition: all 0.15s ease;
	text-decoration: none !important;
}

.ProseMirror .mm-variable:hover {
	background: rgba(250, 70, 22, 0.25);
	border-color: rgba(250, 70, 22, 0.6);
}

/* Selected variable styling */
.ProseMirror .mm-variable.ProseMirror-selectednode {
	background: rgba(250, 70, 22, 0.3);
	border-color: #FA4616;
	outline: 2px solid rgba(250, 70, 22, 0.5);
	outline-offset: 1px;
}

/* BubbleMenu styling for CTA */
.mm-bubble {
	background: #1f1f1f;
	color: #fff;
	border: 1px solid rgba(255,255,255,0.12);
	border-radius: 8px;
	padding: 6px;
	box-shadow: 0 10px 25px rgba(0,0,0,0.35);
}
.mm-bubble-btn {
	width: 28px;
	height: 28px;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	border-radius: 6px;
	background: transparent;
	border: 1px solid transparent;
	color: #e5e5e5;
}
.mm-bubble-btn:hover { background: rgba(255,255,255,0.06); }
.mm-bubble-btn.is-active { background: #FA4616; color: #fff; }
.mm-bubble-sep { width: 1px; height: 20px; background: rgba(255,255,255,0.14); margin: 0 4px; }

/* Blockquote styling in editor */
.ProseMirror blockquote, .mm-blockquote {
	border-left: 3px solid rgba(250, 70, 22, 0.6);
	margin: 1em 0;
	padding: 0.5em 1em;
	background: rgba(255, 255, 255, 0.04);
	border-radius: 0.25rem;
}

/* Columns editor-only visuals */
.ProseMirror .mm-columns {
  border: 2px dashed rgba(255,255,255,0.2);
  border-radius: 12px;
  padding: 8px;
  margin: 12px 0;
  transition: border-color 0.2s ease;
  border-collapse: separate;
  overflow: hidden;
}

.ProseMirror .mm-columns:hover {
  border-color: rgba(250, 70, 22, 0.4);
}

.ProseMirror .mm-columns.ProseMirror-selectednode {
  border-color: rgba(250, 70, 22, 0.6);
  background: rgba(250, 70, 22, 0.05);
}

.ProseMirror .mm-columns td[data-column] {
  padding: 8px 12px;
  min-height: 60px;
  vertical-align: top;
}

.ProseMirror .mm-columns td[data-column] + td[data-column] {
  border-left: 1px dashed rgba(255,255,255,0.15);
}

.ProseMirror strong {
	font-weight: bold;
	color: #ffffff !important;
}

.ProseMirror em {
	font-style: italic;
	color: #e5e5e5 !important;
}

/* Drag handle styling */
.custom-drag-handle {
    width: 18px;
    height: 18px;
    border-radius: 4px;
    background: rgba(255,255,255,0.04);
    border: 1px solid rgba(255,255,255,0.18);
    box-shadow: 0 0 0 1px rgba(0,0,0,0.2);
    cursor: grab;
    z-index: 50;
    pointer-events: auto;
    /* add some breathing room when absolutely positioned without middleware */
    margin-left: 8px;
    /* subtle nudge left so it doesn't hug content */
    transform: translateX(-4px);
}
.custom-drag-handle::before {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	width: 10px;
	height: 10px;
	transform: translate(-50%, -50%);
	background-image: radial-gradient(currentColor 1px, transparent 1px);
	background-size: 4px 4px;
	background-position: 0 0, 2px 2px;
	color: rgba(255,255,255,0.7);
}
.custom-drag-handle:hover {
	border-color: rgba(255,255,255,0.25);
	background: rgba(255,255,255,0.05);
}
.custom-drag-handle:active {
	cursor: grabbing;
}

/* Email Preview Prose Styles */
.prose {
	color: #1a1a1a;
	max-width: 65ch;
}

.prose h1 {
	font-size: 2em;
	font-weight: bold;
	margin-top: 0;
	margin-bottom: 0.8em;
	line-height: 1.2;
	color: #000;
}

.prose h2 {
	font-size: 1.5em;
	font-weight: bold;
	margin-top: 1.6em;
	margin-bottom: 0.8em;
	line-height: 1.3;
	color: #000;
}

.prose h3 {
	font-size: 1.25em;
	font-weight: bold;
	margin-top: 1.6em;
	margin-bottom: 0.6em;
	line-height: 1.4;
	color: #000;
}

.prose p {
	margin-top: 1em;
	margin-bottom: 1em;
	line-height: 1.6;
}

.prose ul,
.prose ol {
	margin-top: 1em;
	margin-bottom: 1em;
	padding-left: 1.5em;
}

.prose ul {
	list-style-type: disc;
}

.prose ol {
	list-style-type: decimal;
}

.prose li {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
	line-height: 1.6;
}

.prose a {
	color: #FA4616;
	text-decoration: underline;
}

.prose a:hover {
  color: #E23F14;
}

.prose strong {
	font-weight: 600;
	color: #000;
}

.prose em {
	font-style: italic;
}

.prose img {
	max-width: 100%;
	height: auto;
	margin: 1.5em 0;
	border-radius: 0.5rem;
}

/* Horizontal rule styling */
.ProseMirror .mm-hr,
.prose .mm-hr {
  border: none;
  height: 1px;
  background: linear-gradient(to right, transparent, #e5e7eb, transparent);
  margin: 2rem 0;
}

/* Hide scrollbars while maintaining scroll functionality */
.scrollbar-hide {
  -ms-overflow-style: none;  /* Internet Explorer 10+ */
  scrollbar-width: none;  /* Firefox */
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;  /* Safari and Chrome */
}

/* Override CTA defaults inside CTACustomizer NodeView */
.ProseMirror .mm-cta-node .mm-cta,
.ProseMirror .mm-cta-node .mm-cta-primary,
.ProseMirror .mm-cta-node .mm-cta-secondary,
.ProseMirror .mm-cta-node .mm-cta-outline {
  background: transparent !important;
  border-color: transparent !important;
  color: inherit !important;
}
